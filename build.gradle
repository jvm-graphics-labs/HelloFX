import static org.gradle.internal.os.OperatingSystem.*

plugins {
    id 'java'
    id 'maven'
    id "org.jetbrains.kotlin.jvm" version "1.3.10"
    id "com.github.johnrengelman.shadow" version '2.0.4'
}

// jitpack
group = 'com.github.kotlin-graphics'

ext {
    moduleName = 'com.github.kotlin_graphics.kool'
    lwjgl_version = "3.2.1-SNAPSHOT"
    lwjgl_natives = current() == WINDOWS ? "windows" : current() == LINUX ? "linux" : "macos"
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib".toString()

    implementation 'com.github.kotlin-graphics:uno-sdk:24550988e24b8fc99428e599b62f2e81a6f0b334'

    ["", "-jemalloc", "-opengl", "-jawt", "-glfw"].each {
        implementation "org.lwjgl:lwjgl$it:$lwjgl_version"
        if (it != "-jawt")
            runtime "org.lwjgl:lwjgl$it:$lwjgl_version:natives-$lwjgl_natives"
    }

    compile fileTree(dir: '../openjdk-jfx/build/sdk/lib', include: ['*.jar'])
}

repositories {
    mavenCentral()
    maven { setUrl("https://oss.sonatype.org/content/repositories/snapshots/") }
    maven { url 'https://jitpack.io' }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
//    archives javadocJar
}

jar {
    inputs.property("moduleName", moduleName)
    manifest.attributes('Automatic-Module-Name': moduleName)
}